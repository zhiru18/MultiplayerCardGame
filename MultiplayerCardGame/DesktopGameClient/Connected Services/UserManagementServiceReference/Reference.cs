//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DesktopGameClient.UserManagementServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CGUser", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CGUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HealthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DesktopGameClient.UserManagementServiceReference.Card[] cardsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DesktopGameClient.UserManagementServiceReference.CGUser.UserStatus userStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DesktopGameClient.UserManagementServiceReference.CGUser.UserType userTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Health {
            get {
                return this.HealthField;
            }
            set {
                if ((this.HealthField.Equals(value) != true)) {
                    this.HealthField = value;
                    this.RaisePropertyChanged("Health");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DesktopGameClient.UserManagementServiceReference.Card[] cards {
            get {
                return this.cardsField;
            }
            set {
                if ((object.ReferenceEquals(this.cardsField, value) != true)) {
                    this.cardsField = value;
                    this.RaisePropertyChanged("cards");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DesktopGameClient.UserManagementServiceReference.CGUser.UserStatus userStatus {
            get {
                return this.userStatusField;
            }
            set {
                if ((this.userStatusField.Equals(value) != true)) {
                    this.userStatusField = value;
                    this.RaisePropertyChanged("userStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DesktopGameClient.UserManagementServiceReference.CGUser.UserType userType {
            get {
                return this.userTypeField;
            }
            set {
                if ((this.userTypeField.Equals(value) != true)) {
                    this.userTypeField = value;
                    this.RaisePropertyChanged("userType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="CGUser.UserStatus", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.DataContracts")]
        public enum UserStatus : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            UNATTACKABLE = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ATTACKABLE = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            STUNNED = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            INGAME = 3,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="CGUser.UserType", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.DataContracts")]
        public enum UserType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            PLAYER = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ADMIN = 1,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Card", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Card : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DesktopGameClient.UserManagementServiceReference.Card.CardType cardtypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DesktopGameClient.UserManagementServiceReference.Card.CardType cardtype {
            get {
                return this.cardtypeField;
            }
            set {
                if ((this.cardtypeField.Equals(value) != true)) {
                    this.cardtypeField = value;
                    this.RaisePropertyChanged("cardtype");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Card.CardType", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.DataContracts")]
        public enum CardType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ATTACK = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DEFENSE = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            EFFECT = 2,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserManagementServiceReference.IUserManagementService")]
    public interface IUserManagementService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/CreateUser", ReplyAction="http://tempuri.org/IUserManagementService/CreateUserResponse")]
        void CreateUser(string id, string email, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/CreateUser", ReplyAction="http://tempuri.org/IUserManagementService/CreateUserResponse")]
        System.Threading.Tasks.Task CreateUserAsync(string id, string email, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserByUserId", ReplyAction="http://tempuri.org/IUserManagementService/GetUserByUserIdResponse")]
        DesktopGameClient.UserManagementServiceReference.CGUser GetUserByUserId(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserByUserId", ReplyAction="http://tempuri.org/IUserManagementService/GetUserByUserIdResponse")]
        System.Threading.Tasks.Task<DesktopGameClient.UserManagementServiceReference.CGUser> GetUserByUserIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateUser", ReplyAction="http://tempuri.org/IUserManagementService/UpdateUserResponse")]
        void UpdateUser(DesktopGameClient.UserManagementServiceReference.CGUser cguser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateUser", ReplyAction="http://tempuri.org/IUserManagementService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(DesktopGameClient.UserManagementServiceReference.CGUser cguser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteCGUser", ReplyAction="http://tempuri.org/IUserManagementService/DeleteCGUserResponse")]
        bool DeleteCGUser(DesktopGameClient.UserManagementServiceReference.CGUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteCGUser", ReplyAction="http://tempuri.org/IUserManagementService/DeleteCGUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteCGUserAsync(DesktopGameClient.UserManagementServiceReference.CGUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetAll", ReplyAction="http://tempuri.org/IUserManagementService/GetAllResponse")]
        DesktopGameClient.UserManagementServiceReference.CGUser[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetAll", ReplyAction="http://tempuri.org/IUserManagementService/GetAllResponse")]
        System.Threading.Tasks.Task<DesktopGameClient.UserManagementServiceReference.CGUser[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteHand", ReplyAction="http://tempuri.org/IUserManagementService/DeleteHandResponse")]
        void DeleteHand(DesktopGameClient.UserManagementServiceReference.CGUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteHand", ReplyAction="http://tempuri.org/IUserManagementService/DeleteHandResponse")]
        System.Threading.Tasks.Task DeleteHandAsync(DesktopGameClient.UserManagementServiceReference.CGUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetCGUserByUserName", ReplyAction="http://tempuri.org/IUserManagementService/GetCGUserByUserNameResponse")]
        DesktopGameClient.UserManagementServiceReference.CGUser GetCGUserByUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetCGUserByUserName", ReplyAction="http://tempuri.org/IUserManagementService/GetCGUserByUserNameResponse")]
        System.Threading.Tasks.Task<DesktopGameClient.UserManagementServiceReference.CGUser> GetCGUserByUserNameAsync(string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagementServiceChannel : DesktopGameClient.UserManagementServiceReference.IUserManagementService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagementServiceClient : System.ServiceModel.ClientBase<DesktopGameClient.UserManagementServiceReference.IUserManagementService>, DesktopGameClient.UserManagementServiceReference.IUserManagementService {
        
        public UserManagementServiceClient() {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateUser(string id, string email, string userName) {
            base.Channel.CreateUser(id, email, userName);
        }
        
        public System.Threading.Tasks.Task CreateUserAsync(string id, string email, string userName) {
            return base.Channel.CreateUserAsync(id, email, userName);
        }
        
        public DesktopGameClient.UserManagementServiceReference.CGUser GetUserByUserId(string id) {
            return base.Channel.GetUserByUserId(id);
        }
        
        public System.Threading.Tasks.Task<DesktopGameClient.UserManagementServiceReference.CGUser> GetUserByUserIdAsync(string id) {
            return base.Channel.GetUserByUserIdAsync(id);
        }
        
        public void UpdateUser(DesktopGameClient.UserManagementServiceReference.CGUser cguser) {
            base.Channel.UpdateUser(cguser);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(DesktopGameClient.UserManagementServiceReference.CGUser cguser) {
            return base.Channel.UpdateUserAsync(cguser);
        }
        
        public bool DeleteCGUser(DesktopGameClient.UserManagementServiceReference.CGUser user) {
            return base.Channel.DeleteCGUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCGUserAsync(DesktopGameClient.UserManagementServiceReference.CGUser user) {
            return base.Channel.DeleteCGUserAsync(user);
        }
        
        public DesktopGameClient.UserManagementServiceReference.CGUser[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<DesktopGameClient.UserManagementServiceReference.CGUser[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public void DeleteHand(DesktopGameClient.UserManagementServiceReference.CGUser user) {
            base.Channel.DeleteHand(user);
        }
        
        public System.Threading.Tasks.Task DeleteHandAsync(DesktopGameClient.UserManagementServiceReference.CGUser user) {
            return base.Channel.DeleteHandAsync(user);
        }
        
        public DesktopGameClient.UserManagementServiceReference.CGUser GetCGUserByUserName(string userName) {
            return base.Channel.GetCGUserByUserName(userName);
        }
        
        public System.Threading.Tasks.Task<DesktopGameClient.UserManagementServiceReference.CGUser> GetCGUserByUserNameAsync(string userName) {
            return base.Channel.GetCGUserByUserNameAsync(userName);
        }
    }
}
